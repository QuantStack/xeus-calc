language: cpp
env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"
matrix:
  fast_finish: true
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
      env: PY=3
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
      env: PY=2
    - os: osx
      osx_image: xcode8
      compiler: clang
      env: PY=3
install:
    # Define the version of miniconda to download
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        MINCONDA_OS=$MINCONDA_LINUX;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        MINCONDA_OS=$MINCONDA_OSX;
      fi
    - if [[ "$PY" == "3" ]]; then
          wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
      else
          wget "http://repo.continuum.io/miniconda/Miniconda2-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
      fi
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    # Host dependencies
    - conda install xeus=0.19.1 nlohmann_json cppzmq = 4.3.0 -c conda-forge
    # Build dependencies
    - conda install cmake -c conda-forge
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        conda install gxx_linux-64 libgcc -c conda-forge;
      fi
    # Test dependencies
    # jupyter_kernel_test is Python3 only.
    # With Python2, we first create a Python3 environment for jupyter_kernel_test
    # // - if [[ "$PY" == "3" ]]; then
    # //     conda install pytest jupyter_kernel_test -c conda-forge;
    # //   else
    # //     conda create --name=kernel_test python=3 pytest jupyter_kernel_test -c conda-forge;
    # //     source activate kernel_test;
    # //   fi
    # Activate root environment
    # - source activate root
    # // # For debugging
    # // - which python
    # // - python --version
    # Build and install xeus-calc
    - mkdir build
    - cd build
    - cmake -D CMAKE_INSTALL_PREFIX=$HOME/miniconda .. -D DOWNLOAD_GTEST=ON
    - make -j2 install
script:
    - ./test/test_xeus_calc
